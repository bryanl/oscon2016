---
- name: create git user
  user: name=git

- name: create git ssh directory
  file: name=/home/git/.ssh state=directory owner=git group=git mode=0700

- name: create authorized_keys
  copy: src=/home/workshop/.ssh/id_rsa.pub dest=/home/git/.ssh/authorized_keys owner=git group=git mode=0644

- name: create jenkins_home
  file: name=/var/jenkins_home state=directory mode=0755 owner=workshop group=workshop

- name: create omniscient repo
  git: repo=https://github.com/bryanl/omniscient.git
       dest=/home/git/omniscient.git
       bare=yes
  become: true
  become_user: git
  tags:
    - git

- name: check for prometheus config
  stat: path=/home/workshop/prometheus
  register: prometheus_dir
- name: download prometheus config
  get_url:
    url=https://s3.pifft.com/oscon2016/prometheus.tar.gz
    dest=/tmp/prometheus.tar.gz
    force=yes
  when: prometheus_dir.stat.exists == False
- name: unarchive prometheus config
  unarchive: src=/tmp/prometheus.tar.gz dest=/home/workshop owner=workshop group=workshop copy=no
  when: prometheus_dir.stat.exists == False
  become: true
  become_user: workshop

- name: jenkins container
  docker:
    name: jenkins
    image: "bryanl/jenkins-oscon2016"
    pull: always
    state: reloaded
    volumes:
      - "/var/jenkins_home:/var/jenkins_home"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "8080:8080"
      - "50000:50000"

- name: prometheus container
  docker:
    name: prometheus
    image: prom/prometheus
    command: -config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -storage.local.memory-chunks=10000
    pull: always
    state: reloaded
    volumes:
      - "/home/workshop/prometheus:/etc/prometheus/"
    ports:
      - "9090:9090"

- name: create grafana directory
  file:
    path="/home/workshop/grafana_db"
    state=directory mode=0755
  become: true
  become_user: workshop

- name: grafana container
  docker:
    name: grafana
    image: grafana/grafana
    pull: always
    state: reloaded
    volumes:
      - "/home/workshop/grafana_db:/var/lib/grafana"
    ports:
      - "3000:3000"

- name: create elasticsearch directory
  file:
    path="/home/workshop/elasticsearch"
    state=directory mode=0755
  become: true
  become_user: workshop

- name: elk container
  docker:
    name: elk
    image: "bryanl/oscon2016-elk"
    pull: always
    state: reloaded
    volumes:
      - "/home/workshop/elasticsearch:/var/lib/elasticsearch"
    ports:
      - "5601:5601"
      - "5001:5000"
      - "5044:5044"
      - "5000:5000/udp"

- name: create registry cert dir
  file:
    path="{{ ca_cert_path }}"
    state=directory mode=0755

- name: install registry ca.crt
  copy:
    src="{{ infra_dir }}/files/ca.pem"
    dest="{{ ca_cert_path }}/ca.crt"
  notify:
    - restart docker

- name: create registry directories
  file:
    path="{{ item }}"
    state=directory mode=0755
  with_items:
    - /var/lib/registry/data
    - /var/lib/registry/certs

- name: copy TLS files
  copy:
    src="{{ infra_dir }}/files/{{ item }}"
    dest="/var/lib/registry/certs/{{ item }}"
  with_items:
    - ca.pem
    - registry.pem
    - registry_key.pem

- name: set registry key security
  file: path=/var/lib/registry/certs/registry_key.pem mode=0600

- name: create registry container
  docker:
    name: registry
    image: registry:2
    state: reloaded
    restart_policy: on-failure
    ports:
      - "5000:5000"
    volumes:
      - "/var/lib/registry/data:/var/lib/registry"
      - "/var/lib/registry/certs:/certs"
    env:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.pem
      REGISTRY_HTTP_TLS_KEY: /certs/registry_key.pem


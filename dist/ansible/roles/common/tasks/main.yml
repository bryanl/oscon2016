---
- name: set timezone to utc
  copy: content='Etc/UTC'
    dest=/etc/timezone
    owner=root
    group=root
    mode=0644
    backup=yes
  notify:
   - update timezone

- name: configure rsyslog
  template:
    src="rsyslog-default"
    dest="/etc/default/rsyslog"
    owner=root
    group=root
    mode=0644
  notify:
    - restart rsyslog
- name: find project id
  shell: cat /etc/project-id
  register: project_id

- name: install docker repo keys
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D

- name: create docker repo
  apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-trusty main' state=present

- name: install elasticsearch repo keys
  apt_key: url=https://packages.elastic.co/GPG-KEY-elasticsearch state=present

- name: create elasticsearch repo
  apt_repository: repo='deb https://packages.elastic.co/beats/apt stable main' state=present

- name: install docker and friends
  apt:
    name="{{ item }}"
    update_cache=yes
    cache_valid_time=3600
  with_items:
    - docker-engine
    - "linux-image-extra-{{ hostvars[inventory_hostname]['ansible_kernel'] }}"
    - python-pip
    - git
    - filebeat

- name: create docker group
  group: name=docker state=present

- name: add workshop user to docker group
  user: name=workshop groups='docker'

- name: configure docker
  template:
    src="docker-default"
    dest="/etc/default/docker"
    owner=root
    group=root
    mode=0644
  notify:
    - restart docker

- name: install docker-py
  pip: name=docker-py state=latest

- name: disable huge pages
  shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled

- name: add default search domain
  lineinfile:
    dest=/etc/resolvconf/resolv.conf.d/base
    line="domain {{ project_id }}.{{ project_id }}"
    state=present
  notify: update resolvconf

- name: create certs directory
  file:
    path="/etc/pki/tls/certs"
    state=directory
    owner=root
    group=root
    mode=0755

- name: install logstash forwarder cert
  template:
    src="logstash-forwarder.crt"
    dest="/etc/pki/tls/certs/logstash-forwarder.crt"
    owner=root
    group=root
    mode=0644

- name: install filebeat configuration
  template:
    src="filebeat.yml"
    dest="/etc/filebeat/filebeat.yml"
    owner=root
    group=root
    mode=0644
  notify: restart filebeat

- name: enable filebeat service
  service: name=filebeat enabled=yes